use std::String
use std::Int
use std::println
use std::print
use std::Option
use std::Result

trait Test {
    fn another()
}

struct Box[T](T)

fn test(thing: Test) {
    let other = 123
}

struct Basic {
    test: Int,
    test2: String
}

fn thingy(x: Option[String]) {
    let basic = Basic(123, "hello")
    let some_basic = Option::Some(basic)
}

impl Basic {
    fn hello() {
        println("Hello")
    }
    fn complex[T](x: T) {
        println("Complex")
    }
}

fn test3(thing: Int) {
    let some = Option::Some(thing)
    some.unwrap()
}

fn test123() {}

impl ToString for Basic {
    fn to_string(): String {
        "Hello"
    }
}

impl ToString {
    fn print() {
        println("Hello")
    }
}

trait ToString {
    fn to_string(): String {
        "Hello"
    }
}
